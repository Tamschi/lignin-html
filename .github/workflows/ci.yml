# Largely inspired by https://github.com/dtolnay/syn/blob/master/.github/workflows/ci.yml under MIT OR Apache-2.0.
name: CI
on:
  pull_request:
  push:
  schedule: [cron: "0 8 * * 5"] # 8:00 on Fridays

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
    - run: cat CI.toml >> Cargo.toml
    - run: cargo test --workspace --all-features

  check:
    name: Check on Rust ${{matrix.rust}}${{format(' ({0})', matrix.target || matrix.os)}}
    runs-on: ${{matrix.os}}-latest
    strategy:
      matrix:
        os: [macos, ubuntu, windows]
        rust: [1.42.0, stable, beta, nightly]
        include:
        - os: ubuntu
          target: wasm32-unknown-unknown
    env:
      lib: ${{matrix.target && '' || '--lib'}}
      target: ${{matrix.target && format('--target={0}', matrix.target)}}
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{matrix.rust}}
        profile: minimal
        target: ${{matrix.target}}
    - run: cat CI.toml >> Cargo.toml
    - run: cargo +${{matrix.rust}} check ${{env.lib}} ${{env.target}} --no-default-features
    - run: cargo +${{matrix.rust}} check ${{env.lib}} ${{env.target}}
    - run: cargo +${{matrix.rust}} check ${{env.lib}} ${{env.target}} --all-features

  minimal-versions:
    name: Minimal Versions
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
    - run: cat CI.toml >> Cargo.toml
    - run: cargo +nightly update -Z minimal-versions
    - run: cargo +nightly check --all-features

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        profile: minimal
        components: clippy
    - run: cat CI.toml >> Cargo.toml
    - run: cargo +nightly clippy --all-features

  fmt:
    name: Formatting
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        profile: minimal
        components: rustfmt
    - run: cat CI.toml >> Cargo.toml
    - run: cargo +nightly fmt -- --check
